/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 04 02:28:26 GMT 2019
 */

package com.test.applications.qmclotserver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.test.applications.qmclotserver.easyFun;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class easyFun_ESTest extends easyFun_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.registerN("wtI!sLk+2!0lT3", 65, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.test.applications.qmclotserver.easyFun", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.register((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.test.applications.qmclotserver.easyFun", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.inserIntoWhite((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.test.applications.qmclotserver.easyFun", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      Object object0 = new Object();
      JsonConfig jsonConfig0 = new JsonConfig();
      JSONObject jSONObject0 = JSONObject.fromObject(object0, jsonConfig0);
      // Undeclared exception!
      try { 
        easyFun0.getuserNo(jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("net.sf.json.util.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.getuserNo((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.json.JSONObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.getuserNo("GJ>F> ;./}gP");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      JSONObject jSONObject0 = JSONObject.fromObject((Object) easyFun0);
      // Undeclared exception!
      try { 
        easyFun0.getToken(jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("net.sf.json.util.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.getToken((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.json.JSONObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.getToken("U_JopKmb+X?Q?#/(I");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.bindPhone((String) null, "productName", "OS;~)o<>m,~KRD><<G");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.test.applications.qmclotserver.easyFun", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.addMoney((String) null, (String) null, "(v'tmn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.test.applications.qmclotserver.easyFun", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.StringToJson("dFr|z(r1ElB+/dy U");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of dFr|z(r1ElB+/dy U
         //
         verifyException("net.sf.json.util.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      JSONObject jSONObject0 = new JSONObject(false);
      // Undeclared exception!
      try { 
        easyFun0.JsonToLotserverCommond(jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"productName\"] not found.
         //
         verifyException("net.sf.json.JSONObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.JsonToLotserverCommond((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.test.applications.qmclotserver.easyFun", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.addMoney("FshJ", "FshJ", "FshJ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("net.sf.json.util.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      easyFun0.register("M", "", "");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      easyFun0.registerN("dFr|z(r1ElB+/dy U", 60, "dFr|z(r1ElB+/dy U", "");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      easyFun0.bindPhone("#q[/-Y|8zf><vkz~", "#q[/-Y|8zf><vkz~", "");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      easyFun0.bindPhone("IBM", "no", "IBM");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.addMoney("1y}~*YV", "1y}~*YV", "1y}~*YV");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("net.sf.json.util.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      easyFun0.inserIntoWhite("YXP#", (String) null, "nC K");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      easyFun0.inserIntoWhite("Z=B", "Z=B", "Z=B");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      // Undeclared exception!
      try { 
        easyFun0.StringToJson((String) null, "http://192.168.30.34:8080/lotserver/test/sendRequest");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // null object
         //
         verifyException("net.sf.json.JSONObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      JSONObject jSONObject0 = easyFun0.StringToJson((String) null);
      assertEquals(0, jSONObject0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      easyFun easyFun0 = new easyFun();
      easyFun0.deductMoney("vBpO");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        easyFun.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("net.sf.json.util.JSONTokener", e);
      }
  }
}
