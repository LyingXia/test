/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 04 02:39:31 GMT 2019
 */

package com.test.applications.qmclotserver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.test.applications.qmclotserver.login;
import java.io.File;
import net.sf.json.JSONObject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class login_ESTest extends login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      login login0 = new login();
      // Undeclared exception!
      try { 
        login0.login((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.json.JSONObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      login login0 = new login();
      MockFile mockFile0 = new MockFile("H`(wx", "H`(wx");
      File file0 = MockFile.createTempFile("H`(wx", "H`(wx", (File) mockFile0);
      // Undeclared exception!
      try { 
        login0.login(file0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/poi/ss/usermodel/WorkbookFactory
         //
         verifyException("com.test.applications.qmclotserver.readExcel", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      login login0 = new login();
      MockFile mockFile0 = new MockFile("", "");
      login0.login((File) mockFile0);
      assertTrue(mockFile0.exists());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      login login0 = new login();
      String string0 = login0.login("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[15];
      login.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      login login0 = new login();
      JSONObject jSONObject0 = new JSONObject();
      String string0 = login0.login(jSONObject0);
      assertEquals("", string0);
      assertEquals(0, jSONObject0.size());
  }
}
