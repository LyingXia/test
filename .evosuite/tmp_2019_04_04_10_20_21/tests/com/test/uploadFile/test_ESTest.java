/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 04 03:02:15 GMT 2019
 */

package com.test.uploadFile;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.test.uploadFile.test;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class test_ESTest extends test_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      test test0 = new test();
      // Undeclared exception!
      try { 
        test0.saveFile("h#!_(R", httpServletRequest0, httpServletResponse0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of h#!_(R
         //
         verifyException("net.sf.json.util.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[8];
      test.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      test test0 = new test();
      test0.os = null;
      String string0 = test0.saveFile((String) null, (HttpServletRequest) null, (HttpServletResponse) null);
      assertEquals("", string0);
  }
}
